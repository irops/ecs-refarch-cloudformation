{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This template deploys an ECS cluster to the provided VPC and subnets using an Auto Scaling Group",

  "Parameters" : {
    "EnvironmentName" : {
      "Description" : "An environment name that will be prefixed to resource names",
      "Type" : "String"
    },

    "InstanceType" : {
      "Description" : "Which instance type should we use to build the ECS cluster?",
      "Type" : "String",
      "Default" : "c4.large"
    },

    "ClusterSize" : {
      "Description" : "How many ECS hosts do you want to initially deploy?",
      "Type" : "Number",
      "Default" : "4"
    },

    "VPC" : {
      "Description" : "Choose which VPC this ECS cluster should be deployed to",
      "Type" : "AWS::EC2::VPC::Id"
    },

    "Subnets" : {
      "Description" : "Choose which subnets this ECS cluster should be deployed to",
      "Type" : "List<AWS::EC2::Subnet::Id>"
    },

    "SecurityGroup" : {
      "Description" : "Select the Security Group to use for the ECS cluster hosts",
      "Type" : "AWS::EC2::SecurityGroup::Id"
    }
  },

  "Mappings" : {
    "AWSRegionToAMI" : {
      "us-east-1"      : { "AMI" : "ami-eca289fb" },
      "us-east-2"      : { "AMI" : "ami-446f3521" },
      "us-west-1"      : { "AMI" : "ami-9fadf8ff" },
      "us-west-2"      : { "AMI" : "ami-7abc111a" },
      "eu-west-1"      : { "AMI" : "ami-a1491ad2" },
      "eu-central-1"   : { "AMI" : "ami-54f5303b" },
      "ap-northeast-1" : { "AMI" : "ami-9cd57ffd" },
      "ap-southeast-1" : { "AMI" : "ami-a900a3ca" },
      "ap-southeast-2" : { "AMI" : "ami-5781be34" }
    }
  },

  "Resources" : {
    "ECSCluster" : {
      "Type" : "AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName" : { "Ref", "EnvironmentName" }
      }
    },

    "ECSAutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "VPCZoneIdentifier" : { "Ref", "Subnets" },
        "LaunchConfigurationName" : { "Ref", "ECSLaunchConfiguration" },
        "MinSize" : { "Ref", "ClusterSize" },
        "MaxSize" : { "Ref", "ClusterSize" },
        "DesiredCapacity" : { "Ref", "ClusterSize" },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Sub" : "${EnvironmentName} ECS host" }, "PropagateAtLaunch" : "true" }
        ]
      },
      "CreationPolicy" : {
        "ResourceSignal" : { 
          "Timeout" : "PT15M"
        }
      },
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
          "MinInstancesInService" : "1",
          "MaxBatchSize" : "1",
          "PauseTime" : "PT15M",
          "WaitOnResourceSignals" : "true"
        }
      }
    },
  
    "ECSLaunchConfiguration" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId" : { "Fn::FindInMap : [ "AWSRegionToAMI", { "Ref" : "AWS::Region" }, "AMI" ] },
        "InstanceType" : { "Ref", "InstanceType" },
        "SecurityGroups" : [ { "Ref", "SecurityGroup" } ],
        "IamInstanceProfile" : { "Ref", "ECSInstanceProfile" },
        "UserData" : { "Fn::Base64": { "Fn::Join" : [ "", [
          "#!/bin/bash\n",
          "yum install -y aws-cfn-bootstrap\n",
          "/opt/aws/bin/cfn-init -v --region ", { "Ref" : "AWS::Region" }, " --stack ", { "Ref" : "AWS::StackName" }, " --resource ECSLaunchConfiguration\n",
          "/opt/aws/bin/cfn-signal -e $? --region ", { "Ref" : "AWS::Region" }, " --stack ", { "Ref" : "AWS::StackName" }, " --resource ECSAutoScalingGroup\n"
        ]]}}
      },
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "commands" : {
              "01_add_instance_to_cluster" : {
                "command" : { "Fn::Sub" : "echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config"
              }
            },
            "files" : {
              "/etc/cfn/cfn-hup.conf" : {
                "mode" : "000400",
                "owner" : "root",
                "group" : "root",
                "content" : { "Fn::Join" : [ "", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" " "AWS::Region" }, "\n"
                ]]}
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                "content" : { "Fn::Join" : [ "", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.ContainerInstances.Metadata.AWS::CloudFormation::Init\n",
                  "action=/opt/aws/bin/cfn-init -v --region ", { "Ref" : "AWS::Region" }, " --stack ", { "Ref" : "AWS::StackName" }, " --resource ECSLaunchConfiguration\n"
                ]]}
              }
            },
            "services" : {
              "sysvinit" : {
                "cfn-hup" : { "enabled" : "true", "ensureRunning" : "true", "files" : [ "/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf" ] }
              }
            }
          }
        }
      }
    },

    "ECSRole" : {
      "Type" : "AWS::IAM::Role"
      "Properties" : {
        "Path" : "/",
        "RoleName" : { "Fn::Sub" : "${EnvironmentName}-ECSRole-${AWS::Region}" },
        "AssumeRolePolicyDocument" : {
          "Statement": [ {
            "Effect": "Allow",
            "Action": "sts:AssumeRole",
            "Principal": { 
              "Service": "ec2.amazonaws.com" 
            }
          } ]
        },
        "Policies" : [ {
          "PolicyName" : "ecs-service",
          "PolicyDocument" : {
            "Statement": [ {
              "Effect": "Allow",
              "Action": [
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetAuthorizationToken"
              ],
              "Resource": "*"
            } ]
          }
        } ]
      }
    },

    "ECSInstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [ { "Ref", "ECSRole" } ]
      }
    }
  },

  "Outputs" : {
    "Cluster" : {
      "Description" : "A reference to the ECS cluster",
      "Value" : { "Ref", "ECSCluster" }
    }
  }
}
